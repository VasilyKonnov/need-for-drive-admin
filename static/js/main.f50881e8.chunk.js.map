{"version":3,"sources":["pages/LoginPage/LoginPage.module.scss","components/InputVsLabel/InputVsLabel.module.scss","store/types.ts","store/store.ts","reportWebVitals.ts","assets/image/LogoIcon.svg","components/ButtonPrimary/ButtonPrimary.tsx","components/InputVsLabel/InputVsLabel.tsx","pages/LoginPage/LoginPage.tsx","App.tsx","index.tsx"],"names":["module","exports","FetchingStateTypes","store","configureStore","reducer","middleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","button","textTransform","background","color","ButtonPrimary","handlerClick","children","className","classes","classNameButton","classNames","Button","onClick","InputVsLabel","classLabel","classInput","label","id","classesLabel","styles","classesInput","input","wrap","htmlFor","InputBase","root","boxShadow","borderRadius","padding","LoginPage","layout","wrapForm","wrapLogo","src","logo","alt","Card","title","footerForm","requestAccess","btnSubmit","App","exact","path","component","ReactDOM","render","basename","process","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,SAAW,4BAA4B,MAAQ,yBAAyB,SAAW,4BAA4B,WAAa,8BAA8B,UAAY,6BAA6B,cAAgB,mC,mBCAxQD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,8B,qECDpFC,E,iDCECC,EAAQC,YAAe,CAClCC,QAAS,GACTC,WAAY,CAACC,Q,SDJHL,K,YAAAA,E,kBAAAA,E,kBAAAA,E,iBAAAA,M,KEEZ,IAYeM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCTC,MAA0B,qC,yDCKnCQ,EAAYC,YAAW,CAC3BC,OAAQ,CACNC,cAAe,UACfC,WAAY,UACZC,MAAO,OACP,UAAW,CACTD,WAAY,cAKLE,EAA0C,SAAC,GAIjD,IAHLC,EAGI,EAHJA,aACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAEMC,EAAUV,IACVW,EAAkBC,IAAWF,EAAQR,OAAQO,GAAwB,IAC3E,OAAIF,EAEA,cAACM,EAAA,EAAD,CAAQC,QAASP,EAAcE,UAAWE,EAA1C,SACGH,IAIE,cAACK,EAAA,EAAD,CAAQJ,UAAWE,EAAnB,SAAqCH,K,yBCzBnCO,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,MACAC,EACI,EADJA,GAEMC,EAAeR,IAAWI,GAA0B,GAAIK,IAAOH,OAC/DI,EAAeV,IAAWK,GAA0B,GAAII,IAAOE,OACrE,OACE,sBAAKd,UAAWY,IAAOG,KAAvB,UACE,uBAAOC,QAASN,EAAIV,UAAWW,EAA/B,SACGF,IAEH,cAACQ,EAAA,EAAD,CAAWP,GAAIA,EAAIV,UAAWa,QCZ9BtB,EAAYC,YAAW,CAC3B0B,KAAM,CACJC,UACE,uJACFC,aAAc,MACdC,QAAS,oBAIAC,EAAY,WACvB,IAAMrB,EAAUV,IAChB,OACE,qBAAKS,UAAWY,IAAOW,OAAvB,SACE,sBAAKvB,UAAWY,IAAOY,SAAvB,UACE,sBAAKxB,UAAWY,IAAOa,SAAvB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,+CACpB,qDAEF,eAACC,EAAA,EAAD,CAAM7B,UAAWC,EAAQiB,KAAzB,UACE,mBAAGlB,UAAWY,IAAOkB,MAArB,sCACA,iCACE,cAAC,EAAD,CAAcpB,GAAG,YAAYD,MAAM,mCACnC,cAAC,EAAD,CAAcC,GAAG,YAAYD,MAAM,yCACnC,sBAAKT,UAAWY,IAAOmB,WAAvB,UACE,sBAAM/B,UAAWY,IAAOoB,cAAxB,yGACA,cAAC,EAAD,CAAehC,UAAWY,IAAOqB,UAAjC,2DCpBCC,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,O,MCGvCgB,IAASC,OACP,cAAC,IAAD,CAAU9D,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAe+D,SAAUC,wBAAzB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.f50881e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"LoginPage_layout__2-WHf\",\"wrapForm\":\"LoginPage_wrapForm__9lA1F\",\"title\":\"LoginPage_title__3JwoF\",\"wrapLogo\":\"LoginPage_wrapLogo__1Kbbv\",\"footerForm\":\"LoginPage_footerForm__1-bqb\",\"btnSubmit\":\"LoginPage_btnSubmit__24DKd\",\"requestAccess\":\"LoginPage_requestAccess__1bK_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"InputVsLabel_wrap__2n9fE\",\"label\":\"InputVsLabel_label__2EPtF\",\"input\":\"InputVsLabel_input__3wa6w\"};","export enum FetchingStateTypes {\r\n  none = 'none',\r\n  loading = 'loading',\r\n  success = 'success',\r\n  failed = 'failed',\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk'\r\nexport const store = configureStore({\r\n  reducer: {},\r\n  middleware: [thunk],\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = ReturnType<typeof store.dispatch>\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/LogoIcon.42a15795.svg\";","import { Button } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { TButtonPrimary } from './ButtonPrimaryTypes'\r\nimport classNames from 'classnames'\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    textTransform: 'initial',\r\n    background: '#007BFF',\r\n    color: '#fff',\r\n    '&:hover': {\r\n      background: '#004DFF',\r\n    },\r\n  },\r\n})\r\n\r\nexport const ButtonPrimary: React.FC<TButtonPrimary> = ({\r\n  handlerClick,\r\n  children,\r\n  className,\r\n}) => {\r\n  const classes = useStyles()\r\n  const classNameButton = classNames(classes.button, className ? className : '')\r\n  if (handlerClick) {\r\n    return (\r\n      <Button onClick={handlerClick} className={classNameButton}>\r\n        {children}\r\n      </Button>\r\n    )\r\n  } else {\r\n    return <Button className={classNameButton}>{children}</Button>\r\n  }\r\n}\r\n","import { InputBase } from '@material-ui/core'\r\nimport { TInputVsLabel } from './InputVsLabelTypes'\r\nimport classNames from 'classnames'\r\nimport styles from './InputVsLabel.module.scss'\r\n\r\nexport const InputVsLabel: React.FC<TInputVsLabel> = ({\r\n  classLabel,\r\n  classInput,\r\n  label,\r\n  id,\r\n}) => {\r\n  const classesLabel = classNames(classLabel ? classLabel : '', styles.label)\r\n  const classesInput = classNames(classInput ? classInput : '', styles.input)\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <label htmlFor={id} className={classesLabel}>\r\n        {label}\r\n      </label>\r\n      <InputBase id={id} className={classesInput} />\r\n    </div>\r\n  )\r\n}\r\n","import { Card } from '@material-ui/core'\r\nimport logo from '../../assets/image/LogoIcon.svg'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport styles from './LoginPage.module.scss'\r\nimport { ButtonPrimary, InputVsLabel } from '../../components'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    boxShadow:\r\n      '0px 1px 0px rgba(90, 97, 105, 0.11), 0px 2px 4px rgba(90, 97, 105, 0.12), 0px 5px 5px rgba(90, 97, 105, 0.06), 0px 3.5px 35px rgba(90, 97, 105, 0.1)',\r\n    borderRadius: '9px',\r\n    padding: '19px 17px 20px',\r\n  },\r\n})\r\n\r\nexport const LoginPage = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={styles.layout}>\r\n      <div className={styles.wrapForm}>\r\n        <div className={styles.wrapLogo}>\r\n          <img src={logo} alt=\"Логотип\" />\r\n          <span>Need for drive</span>\r\n        </div>\r\n        <Card className={classes.root}>\r\n          <p className={styles.title}>Вход</p>\r\n          <form>\r\n            <InputVsLabel id=\"inputMail\" label=\"Почта\" />\r\n            <InputVsLabel id=\"inputPass\" label=\"Пароль\" />\r\n            <div className={styles.footerForm}>\r\n              <span className={styles.requestAccess}>Запросить доступ</span>\r\n              <ButtonPrimary className={styles.btnSubmit}>Войти</ButtonPrimary>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Route, Switch } from 'react-router-dom'\nimport { LoginPage } from './pages'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={LoginPage} />\n    </Switch>\n  )\n}\n\nexport default App\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport store from './store'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport App from './App'\r\nimport './index.scss'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}